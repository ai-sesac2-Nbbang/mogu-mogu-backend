Project {
  database_type: "PostgreSQL"
}

/* ---------- Enums ---------- */

Enum gender_enum {
  male
  female
  other
}

Enum category_enum {
  생활용품
  식품_간식류
  패션_잡화
  뷰티_헬스케어
}

Enum household_size_enum {
  1인
  2인
  3인
  4인_이상
}

Enum market_enum {
  코스트코
  이마트
  트레이더스
  노브랜드
  편의점     // GS25, CU, 7ELEVEN 등
  홈플러스
  동네마켓
  전통시장
  이커머스   // coupang, SSG.COM, 11번가, NAVER, kakao 등
  기타
}

Enum user_status_enum {
    pending_onboarding  // 온보딩 대기 (추가 정보 필요)
    active      // 활성 사용자 (온보딩 완료)
    inactive    // 비활성
    suspended   // 정지
}

Enum post_status_enum {
  draft
  recruiting
  locked
  purchasing
  distributing
  completed
  canceled
}

Enum participation_status_enum {
  applied
  accepted
  rejected
  canceled
  no_show
  fulfilled
}

/* ---------- Tables ---------- */

Table app_user {
  id                uuid        [pk, default: `gen_random_uuid()`]
  kakao_id          bigint      [unique, note: '카카오 고유 ID']
  provider          text        [not null, default: 'kakao']
  
  email             text        [not null, unique]
  nickname          text
  profile_image_url text
  
  name              text
  phone_number      text
  birth_date        date
  gender            gender_enum [note: 'CHECK (gender IN (\'male\',\'female\',\'other\'))']
  
  interested_categories category_enum[] [note: '관심 카테고리 배열']
  household_size    household_size_enum [note: '가구 수 (1인/2인/3인/4인 이상)']
  wish_markets      market_enum[] [note: '관심 마켓 배열']
  wish_times        int[] [not null, default: '{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}', note: '모구 거래 선호 시간대 배열 [0]*24 (선택한 시간대는 1, 선택하지 않은 시간대는 0)']

  reported_count    int         [not null, default: 0, note: '신고 누적 횟수']
  status            user_status_enum [not null, default: 'pending_onboarding']
  
  created_at        timestamptz [not null, default: `now()`]
  onboarded_at      timestamptz
  updated_at        timestamptz [not null, default: `now()`]

  Note: '사용자'
}

Table refresh_token {
  id              bigserial   [pk]
  refresh_token   text        [not null, unique]
  used            boolean     [not null, default: false]
  exp             bigint      [not null]
  user_id         uuid        [not null]
  created_at      timestamptz [not null, default: `now()`]
  
  Note: 'JWT Refresh Token'
}

Table user_wish_spot {
  id              bigserial   [pk]
  user_id         uuid        [not null, note: 'FK to app_user']
  label           text        [not null, note: '예: 집, 회사']
  location        geography   [not null, note: 'PostGIS POINT (SRID 4326, 경도/위도)']
  created_at      timestamptz [not null, default: `now()`]
  
  Note: '사용자 관심 장소 (최대 2개)'
  
  Indexes {
    user_id [name: 'idx_user_wish_spot_user_id']
    location [type: gist, name: 'idx_user_wish_spot_location', note: 'PostGIS spatial index']
  }
}

Table mogu_post {
  id              uuid        [pk, default: `gen_random_uuid()`]
  user_id         uuid        [not null, note: '모구장 FK']
  title           text        [not null]
  description     text
  price           int         [not null, note: '수고비 포함 최종 가격']
  category       category_enum [not null, note: '게시물 카테고리 (단일 선택)']

  mogu_market     market_enum   [not null]
  mogu_spot       geography   [not null, note: 'PostGIS Point']

  mogu_datetime   timestamptz [not null]
  status          post_status_enum  [not null, default: 'recruiting', note: 'CHECK (status IN (\'draft\',\'recruiting\',\'locked\',\'purchasing\',\'distributing\',\'completed\',\'canceled\'))']
  target_count    int         [note: '목표 인원 수']
  joined_count    int         [not null, default: 0, note: '현재 모집된 인원 수']

  Note: '모구 게시물'
}

Table mogu_post_image {
  id          uuid        [pk, default: `gen_random_uuid()`]
  mogu_post_id uuid       [not null]
  image_url   text        [not null, note: 'S3 또는 Supabase Storage 경로']
  sort_order  int         [default: 0, note: '정렬 순서']
  is_thumbnail boolean    [default: false, note: '대표 이미지 여부']
  created_at  timestamptz [not null, default: `now()`]

  Note: '모구 게시물 이미지'
}

Table question_answer {
  id           uuid        [pk, default: `gen_random_uuid()`]
  mogu_post_id uuid        [not null]

  questioner_id      uuid        [not null, note: '질문 작성자']
  question     text        [not null]

  answerer_id        uuid        [note: '답변자(보통 모구장)']
  answer       text
  
  is_private   boolean     [not null, default: false]
  question_created_at timestamptz [not null, default: `now()`]
  answer_created_at   timestamptz

  Note: 'Q&A (비공개: 작성자/모구장만 열람)'
}

Table participation {
  user_id      uuid        [not null]
  mogu_post_id uuid        [not null]
  status       participation_status_enum  [not null, default: 'applied', note: 'CHECK (status IN (\'applied\',\'accepted\',\'rejected\',\'canceled\',\'no_show\',\'fulfilled\'))']
  applied_at   timestamptz [not null, default: `now()`]
  decided_at   timestamptz

  Note: '포스트 참여'

  Indexes {
    (user_id, mogu_post_id) [pk]
  }
}

Table rating {
  id           uuid        [pk, default: `gen_random_uuid()`]
  mogu_post_id uuid        [not null]
  reviewer_id  uuid        [not null, note: '평가자']
  reviewee_id  uuid        [not null, note: '피평가자']
  stars        int         [not null, note: 'CHECK (stars BETWEEN 1 AND 5)']
  keywords     text[]      [note: '고정 키워드 선택값']
  created_at   timestamptz [not null, default: `now()`]

  Note: '평가 (모구 완료 후)'
  Indexes {
    (mogu_post_id, reviewer_id, reviewee_id) [unique]
  }
}

Table mogu_favorite {
  user_id      uuid        [not null]
  mogu_post_id uuid        [not null]
  created_at   timestamptz [not null, default: `now()`]

  Note: '모구 게시물 찜하기'

  Indexes {
    (user_id, mogu_post_id) [pk]
    user_id [name: 'idx_mogu_favorite_user_id']
    mogu_post_id [name: 'idx_mogu_favorite_mogu_post_id']
  }
}

/* ---------- Relations ---------- */
Ref: refresh_token.user_id > app_user.id

Ref: user_wish_spot.user_id > app_user.id

Ref: mogu_post.user_id > app_user.id

Ref: mogu_post_image.mogu_post_id > mogu_post.id

Ref: question_answer.mogu_post_id > mogu_post.id
Ref: question_answer.questioner_id > app_user.id
Ref: question_answer.answerer_id  > app_user.id

Ref: participation.user_id > app_user.id
Ref: participation.mogu_post_id > mogu_post.id

Ref: rating.mogu_post_id > mogu_post.id
Ref: rating.reviewer_id  > app_user.id
Ref: rating.reviewee_id  > app_user.id

Ref: mogu_favorite.user_id > app_user.id
Ref: mogu_favorite.mogu_post_id > mogu_post.id
