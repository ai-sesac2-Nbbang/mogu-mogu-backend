"""add_wish_times_favorites_and_rating_keywords

Revision ID: 51c740e272f3
Revises: 2d8cbe92aff2
Create Date: 2025-10-03 11:59:54.982356

"""

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "51c740e272f3"
down_revision = "2d8cbe92aff2"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # 1. app_user 테이블에 wish_times 컬럼 추가
    op.add_column(
        "app_user",
        sa.Column(
            "wish_times",
            postgresql.ARRAY(sa.Integer()),
            nullable=True,  # 일단 nullable로 추가
            comment="모구 거래 선호 시간대 배열 [0]*24 (선택한 시간대는 1, 선택하지 않은 시간대는 0)",
        ),
    )

    # 기존 데이터에 기본값 설정
    op.execute(
        "UPDATE app_user SET wish_times = ARRAY[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0] WHERE wish_times IS NULL"
    )

    # 컬럼을 NOT NULL로 변경
    op.alter_column("app_user", "wish_times", nullable=False)

    # 2. mogu_favorite 테이블 생성
    op.create_table(
        "mogu_favorite",
        sa.Column("user_id", sa.String(length=36), nullable=False),
        sa.Column("mogu_post_id", sa.String(length=36), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["mogu_post_id"], ["mogu_post.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["app_user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("user_id", "mogu_post_id"),
        comment="모구 게시물 찜하기",
    )
    op.create_index(
        "idx_mogu_favorite_user_id", "mogu_favorite", ["user_id"], unique=False
    )
    op.create_index(
        "idx_mogu_favorite_mogu_post_id",
        "mogu_favorite",
        ["mogu_post_id"],
        unique=False,
    )

    # 3. rating_keyword_master 테이블 생성
    op.create_table(
        "rating_keyword_master",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "code",
            sa.Text(),
            nullable=False,
            comment="키워드 코드 (예: friendly_communication)",
        ),
        sa.Column("name_kr", sa.Text(), nullable=False, comment="한국어 키워드 이름"),
        sa.Column("type", sa.Text(), nullable=False, comment="positive 또는 negative"),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
        comment="평가 키워드 마스터 데이터",
    )

    # 4. user_keyword_stats 테이블 생성
    op.create_table(
        "user_keyword_stats",
        sa.Column("user_id", sa.String(length=36), nullable=False),
        sa.Column(
            "keyword_code",
            sa.Text(),
            nullable=False,
            comment="rating_keyword_master.code 참조",
        ),
        sa.Column("count", sa.Integer(), nullable=False, server_default="0"),
        sa.Column(
            "last_updated",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["keyword_code"], ["rating_keyword_master.code"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["app_user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("user_id", "keyword_code"),
        comment="사용자별 키워드 통계",
    )
    op.create_index(
        "idx_user_keyword_stats_user_id",
        "user_keyword_stats",
        ["user_id"],
        unique=False,
    )
    op.create_index(
        "idx_user_keyword_stats_keyword_code",
        "user_keyword_stats",
        ["keyword_code"],
        unique=False,
    )

    # 5. rating_keyword_master에 초기 데이터 삽입
    connection = op.get_bind()
    connection.execute(
        sa.text(
            """
        INSERT INTO rating_keyword_master (code, name_kr, type) VALUES
        ('friendly_communication', '소통이 친절하고 설명이 정확해요', 'positive'),
        ('time_place_promise', '시간 및 장소 약속을 잘 지켜요', 'positive'),
        ('fast_settlement', '정산이 빠르고 깔끔해요', 'positive'),
        ('careful_product', '상품을 꼼꼼히 챙겨줘요', 'positive'),
        ('quick_response', '응답이 빨라요', 'positive'),
        ('fresh_management', '신선상품 관리를 잘 해줘요', 'positive'),
        ('trustworthy', '신뢰할 수 있어요', 'positive'),
        ('want_again', '다음에도 함께하고 싶어요', 'positive'),
        ('time_break', '시간을 어겨요', 'negative'),
        ('unfriendly_communication', '소통이 불친절해요', 'negative'),
        ('late_settlement', '정산이 늦어요', 'negative'),
        ('careless_product', '상품을 대충 챙겨줘요', 'negative'),
        ('poor_packaging', '포장 상태가 부실해요', 'negative'),
        ('opaque_process', '거래 과정이 불투명해요', 'negative'),
        ('inaccurate_photo', '상품 사진을 정확하게 업로드하지 않아요', 'negative'),
        ('refund_haggling', '환불이나 가격 흥정을 고집해요', 'negative');
        """
        )
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # 5. rating_keyword_master 데이터 삭제 (자동으로 CASCADE로 삭제됨)

    # 4. user_keyword_stats 테이블 삭제
    op.drop_index(
        "idx_user_keyword_stats_keyword_code", table_name="user_keyword_stats"
    )
    op.drop_index("idx_user_keyword_stats_user_id", table_name="user_keyword_stats")
    op.drop_table("user_keyword_stats")

    # 3. rating_keyword_master 테이블 삭제
    op.drop_table("rating_keyword_master")

    # 2. mogu_favorite 테이블 삭제
    op.drop_index("idx_mogu_favorite_mogu_post_id", table_name="mogu_favorite")
    op.drop_index("idx_mogu_favorite_user_id", table_name="mogu_favorite")
    op.drop_table("mogu_favorite")

    # 1. app_user 테이블에서 wish_times 컬럼 삭제
    op.drop_column("app_user", "wish_times")

    # ### end Alembic commands ###
