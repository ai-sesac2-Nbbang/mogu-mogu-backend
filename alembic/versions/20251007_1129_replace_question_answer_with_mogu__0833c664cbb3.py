"""replace_question_answer_with_mogu_comment

Revision ID: 0833c664cbb3
Revises: d05d5589df17
Create Date: 2025-10-07 11:29:34.346394

"""

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "0833c664cbb3"
down_revision = "d05d5589df17"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "mogu_comment",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("mogu_post_id", sa.String(length=36), nullable=False),
        sa.Column("user_id", sa.String(length=36), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["mogu_post_id"], ["mogu_post.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["app_user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_mogu_comment_mogu_post_id"),
        "mogu_comment",
        ["mogu_post_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_mogu_comment_user_id"), "mogu_comment", ["user_id"], unique=False
    )
    op.drop_index(op.f("ix_question_answer_mogu_post_id"), table_name="question_answer")
    op.drop_index(
        op.f("ix_question_answer_questioner_id"), table_name="question_answer"
    )
    op.drop_table("question_answer")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "question_answer",
        sa.Column("id", sa.VARCHAR(length=36), autoincrement=False, nullable=False),
        sa.Column(
            "mogu_post_id", sa.VARCHAR(length=36), autoincrement=False, nullable=False
        ),
        sa.Column(
            "questioner_id", sa.VARCHAR(length=36), autoincrement=False, nullable=False
        ),
        sa.Column("question", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "answerer_id", sa.VARCHAR(length=36), autoincrement=False, nullable=True
        ),
        sa.Column("answer", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_private", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "question_created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "answer_created_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["answerer_id"],
            ["app_user.id"],
            name=op.f("question_answer_answerer_id_fkey"),
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["mogu_post_id"],
            ["mogu_post.id"],
            name=op.f("question_answer_mogu_post_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["questioner_id"],
            ["app_user.id"],
            name=op.f("question_answer_questioner_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("question_answer_pkey")),
    )
    op.create_index(
        op.f("ix_question_answer_questioner_id"),
        "question_answer",
        ["questioner_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_question_answer_mogu_post_id"),
        "question_answer",
        ["mogu_post_id"],
        unique=False,
    )
    op.drop_index(op.f("ix_mogu_comment_user_id"), table_name="mogu_comment")
    op.drop_index(op.f("ix_mogu_comment_mogu_post_id"), table_name="mogu_comment")
    op.drop_table("mogu_comment")
    # ### end Alembic commands ###
