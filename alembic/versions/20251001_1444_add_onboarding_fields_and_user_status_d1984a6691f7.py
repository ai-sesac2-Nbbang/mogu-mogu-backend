"""add_onboarding_fields_and_user_status

Revision ID: d1984a6691f7
Revises: b5ace4cae445
Create Date: 2025-10-01 14:44:20.603381

"""

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "d1984a6691f7"
down_revision = "b5ace4cae445"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Enum 타입들 생성
    op.execute("CREATE TYPE gender_enum AS ENUM ('male', 'female', 'other')")
    op.execute(
        "CREATE TYPE category_enum AS ENUM ('생활용품', '식품/간식류', '패션/잡화', '뷰티/헬스케어')"
    )
    op.execute(
        "CREATE TYPE household_size_enum AS ENUM ('1인', '2인', '3인', '4인 이상')"
    )
    op.execute(
        "CREATE TYPE market_enum AS ENUM ('코스트코', '이마트', '트레이더스', '노브랜드', '편의점', '홈플러스', '동네마켓', '전통시장', '이커머스', '기타')"
    )
    op.execute(
        "CREATE TYPE user_status_enum AS ENUM ('pending_onboarding', 'active', 'inactive', 'suspended')"
    )

    op.add_column("app_user", sa.Column("name", sa.Text(), nullable=True))
    op.add_column("app_user", sa.Column("phone_number", sa.Text(), nullable=True))
    op.add_column("app_user", sa.Column("birth_date", sa.Date(), nullable=True))
    op.add_column(
        "app_user",
        sa.Column(
            "gender",
            sa.Enum("male", "female", "other", name="gender_enum"),
            nullable=True,
        ),
    )
    op.add_column(
        "app_user",
        sa.Column(
            "interested_categories",
            sa.ARRAY(
                sa.Enum(
                    "생활용품",
                    "식품/간식류",
                    "패션/잡화",
                    "뷰티/헬스케어",
                    name="category_enum",
                )
            ),
            nullable=True,
        ),
    )
    op.add_column(
        "app_user",
        sa.Column(
            "household_size",
            sa.Enum("1인", "2인", "3인", "4인 이상", name="household_size_enum"),
            nullable=True,
        ),
    )
    op.add_column(
        "app_user",
        sa.Column(
            "wish_markets",
            sa.ARRAY(
                sa.Enum(
                    "코스트코",
                    "이마트",
                    "트레이더스",
                    "노브랜드",
                    "편의점",
                    "홈플러스",
                    "동네마켓",
                    "전통시장",
                    "이커머스",
                    "기타",
                    name="market_enum",
                )
            ),
            nullable=True,
        ),
    )
    op.add_column(
        "app_user",
        sa.Column("wish_spots", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    )
    op.add_column(
        "app_user",
        sa.Column(
            "status",
            sa.Enum(
                "pending_onboarding",
                "active",
                "inactive",
                "suspended",
                name="user_status_enum",
            ),
            server_default="pending_onboarding",
            nullable=False,
        ),
    )
    op.add_column(
        "app_user",
        sa.Column(
            "reported_count", sa.BigInteger(), server_default="0", nullable=False
        ),
    )
    op.add_column(
        "app_user", sa.Column("onboarded_at", sa.DateTime(timezone=True), nullable=True)
    )
    op.add_column(
        "app_user",
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.alter_column(
        "app_user",
        "email",
        existing_type=sa.VARCHAR(length=256),
        type_=sa.Text(),
        existing_nullable=False,
    )
    op.alter_column(
        "app_user",
        "nickname",
        existing_type=sa.VARCHAR(length=100),
        type_=sa.Text(),
        existing_nullable=True,
    )
    op.alter_column(
        "app_user",
        "profile_image_url",
        existing_type=sa.VARCHAR(length=512),
        type_=sa.Text(),
        existing_nullable=True,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "app_user",
        "profile_image_url",
        existing_type=sa.Text(),
        type_=sa.VARCHAR(length=512),
        existing_nullable=True,
    )
    op.alter_column(
        "app_user",
        "nickname",
        existing_type=sa.Text(),
        type_=sa.VARCHAR(length=100),
        existing_nullable=True,
    )
    op.alter_column(
        "app_user",
        "email",
        existing_type=sa.Text(),
        type_=sa.VARCHAR(length=256),
        existing_nullable=False,
    )
    op.drop_column("app_user", "updated_at")
    op.drop_column("app_user", "onboarded_at")
    op.drop_column("app_user", "reported_count")
    op.drop_column("app_user", "status")
    op.drop_column("app_user", "wish_spots")
    op.drop_column("app_user", "wish_markets")
    op.drop_column("app_user", "household_size")
    op.drop_column("app_user", "interested_categories")
    op.drop_column("app_user", "gender")
    op.drop_column("app_user", "birth_date")
    op.drop_column("app_user", "phone_number")
    op.drop_column("app_user", "name")

    # Enum 타입들 삭제
    op.execute("DROP TYPE IF EXISTS user_status_enum")
    op.execute("DROP TYPE IF EXISTS market_enum")
    op.execute("DROP TYPE IF EXISTS household_size_enum")
    op.execute("DROP TYPE IF EXISTS category_enum")
    op.execute("DROP TYPE IF EXISTS gender_enum")
    # ### end Alembic commands ###
